name: Build Wheels

on:
  workflow_dispatch:
    inputs:
      build_for:
        description: 'Target OS'
        required: true
        default: 'all'
        options:
          - 'linux'
          - 'windows'
          - 'macos'
          - 'all'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, 3.10, 3.11, 3.12]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Clone DAGGER
      run: |
        git clone https://github.com/bgailleton/DAGGER.git
        cd DAGGER
        git checkout main

    - name: Clone pytopotoolbox (and libtopotoolbox)
      run: |
        git clone https://github.com/TopoToolbox/pytopotoolbox.git
        cd pytopotoolbox
        git checkout main

    - name: Install build dependencies on Linux
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install build-essential -y

    - name: Install build dependencies on macOS
      if: runner.os == 'macOS'
      run: |
        brew install gcc

    - name: Install build dependencies on Windows
      if: runner.os == 'Windows'
      run: |
        choco install visualstudio2022buildtools -y

    - name: Set up Miniforge on Linux
      if: runner.os == 'Linux'
      run: |
        wget "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh" -O miniforge.sh
        bash miniforge.sh -b -p $HOME/miniforge
        source $HOME/miniforge/bin/activate

    - name: Set up Miniforge on macOS
      if: runner.os == 'macOS'
      run: |
        brew install --cask miniforge
        source /opt/homebrew/Caskroom/miniforge/base/bin/activate

    - name: Set up Miniforge on Windows
      if: runner.os == 'Windows'
      run: |
        choco install miniforge

    - name: Install Python environment with Miniforge (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        source $HOME/miniforge/bin/activate  # For Linux
        mamba create -n build-env python=3.12 -y

    - name: Install Python environment with Miniforge on macOS
      if: runner.os == 'macOS'
      run: |
        source /opt/homebrew/Caskroom/miniforge/base/bin/activate
        mamba create -n build-env python=3.12 -y

    - name: Install Python environment with Miniforge on Windows
      if: runner.os == 'Windows'
      run: |
        C:\Miniforge3\Scripts\activate


    - name: Setting up cibuildwheel
      run: |
        pip install cibuildwheel
        mkdir -p wheels/pytopotoolbox wheels/dagger wheels/scabbard

    - name: Build pytopotoolbox Wheels
      run: |
        mamba run -n build-env cibuildwheel --output-dir wheelhouse/pytopotoolbox

    - name: Build DAGGER Wheels
      run: |
        mamba run -n build-env cibuildwheel --output-dir wheelhouse/dagger

    - name: Commit wheels to repository
      run: |
        mkdir -p wheels
        mv wheelhouse/pytopotoolbox/*.whl wheels/pytopotoolbox/
        mv wheelhouse/dagger/*.whl wheels/dagger/
        mv wheelhouse/scabbard/*.whl wheels/scabbard/

        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        git pull --rebase origin ${{ github.ref }}
        git add wheels/**/*.whl
        git commit -m "Add built wheels to repository [skip ci]"
        git push origin ${{ github.ref }}
