name: Build Wheels

on:
  workflow_dispatch:
    inputs:
      build_for:
        description: 'Target OS'
        required: true
        default: 'all'
        options:
          - 'linux'
          - 'windows'
          - 'macos'
          - 'all'

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', 3.11, 3.12]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Clone DAGGER
      run: |
        git clone https://github.com/bgailleton/DAGGER.git
        cd DAGGER
        git checkout main

    - name: Clone pytopotoolbox (and libtopotoolbox)
      run: |
        git clone https://github.com/TopoToolbox/pytopotoolbox.git
        cd pytopotoolbox
        git checkout main

    # Install dependencies per OS
    - name: Install build dependencies on Linux
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install build-essential -y

    - name: Install build dependencies on macOS
      if: runner.os == 'macOS'
      run: |
        brew install gcc

    - name: Install build dependencies on Windows
      if: runner.os == 'Windows'
      run: |
        choco install visualstudio2022buildtools -y

    # Set up Miniforge per OS
    - name: Set up Miniforge on Linux
      if: runner.os == 'Linux'
      run: |
        wget "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh" -O miniforge.sh
        bash miniforge.sh -b -p $HOME/miniforge

    - name: Set up Miniforge on macOS
      if: runner.os == 'macOS'
      run: |
        brew install --cask miniforge

    - name: Set up Miniforge on Windows
      if: runner.os == 'Windows'
      run: |
        choco install miniforge

    # Install the correct Python environment based on matrix
    - name: Install Python environment with Miniforge on Linux
      if: runner.os == 'Linux'
      run: |
        source $HOME/miniforge/bin/activate && mamba create -n build_env python=${{ matrix.python-version }} -y
        source $HOME/miniforge/bin/activate && mamba run -n build_env mamba install -c conda-forge xtensor-python -y

    - name: Install Python environment with Miniforge on macOS
      if: runner.os == 'macOS'
      run: |
        source /opt/homebrew/Caskroom/miniforge/base/bin/activate && mamba create -n build_env python=${{ matrix.python-version }} -y
        source /opt/homebrew/Caskroom/miniforge/base/bin/activate && mamba run -n build_env mamba install -c conda-forge xtensor-python -y

    - name: Install Python environment with Miniforge on Windows
      if: runner.os == 'Windows'
      run: |
        C:/Miniforge3/Scripts/activate && mamba create -n build_env python=${{ matrix.python-version }} -y
        C:/Miniforge3/Scripts/activate && mamba run -n build_env mamba install -c conda-forge xtensor-python -y

    # Install pip build tools (build, wheel) and create wheels
    - name: Install pip build tools on Linux
      if: runner.os == 'Linux'
      run: |
        source $HOME/miniforge/bin/activate && mamba run -n build_env pip install build wheel

    - name: Install pip build tools on macOS
      if: runner.os == 'macOS'
      run: |
        source /opt/homebrew/Caskroom/miniforge/base/bin/activate && mamba run -n build_env pip install build wheel

    - name: Install pip build tools on Windows
      if: runner.os == 'Windows'
      run: |
        C:/Miniforge3/Scripts/activate && mamba run -n build_env pip install build wheel

    # Build wheels for pytopotoolbox
    - name: Build pytopotoolbox Wheels on Linux
      if: runner.os == 'Linux'
      run: |
        source $HOME/miniforge/bin/activate && mamba run -n build_env pip wheel ./pytopotoolbox -w wheelhouse/pytopotoolbox

    - name: Build pytopotoolbox Wheels on macOS
      if: runner.os == 'macOS'
      run: |
        source /opt/homebrew/Caskroom/miniforge/base/bin/activate && mamba run -n build_env pip wheel ./pytopotoolbox -w wheelhouse/pytopotoolbox

    - name: Build pytopotoolbox Wheels on Windows
      if: runner.os == 'Windows'
      run: |
        C:/Miniforge3/Scripts/activate && mamba run -n build_env pip wheel ./pytopotoolbox -w wheelhouse/pytopotoolbox

    # Build wheels for DAGGER
    - name: Build DAGGER Wheels on Linux
      if: runner.os == 'Linux'
      run: |
        source $HOME/miniforge/bin/activate && mamba run -n build_env pip wheel ./DAGGER/wrappers/python -w wheelhouse/dagger

    - name: Build DAGGER Wheels on macOS
      if: runner.os == 'macOS'
      run: |
        source /opt/homebrew/Caskroom/miniforge/base/bin/activate && mamba run -n build_env pip wheel ./DAGGER/wrappers/python -w wheelhouse/dagger

    - name: Build DAGGER Wheels on Windows
      if: runner.os == 'Windows'
      run: |
        C:/Miniforge3/Scripts/activate && mamba run -n build_env pip wheel ./DAGGER/wrappers/python -w wheelhouse/dagger

    # Build wheels for scabbard
    - name: Build scabbard Wheels on Linux
      if: runner.os == 'Linux'
      run: |
        source $HOME/miniforge/bin/activate && mamba run -n build_env pip wheel . -w wheelhouse/scabbard

    - name: Build scabbard Wheels on macOS
      if: runner.os == 'macOS'
      run: |
        source /opt/homebrew/Caskroom/miniforge/base/bin/activate && mamba run -n build_env pip wheel . -w wheelhouse/scabbard

    - name: Build scabbard Wheels on Windows
      if: runner.os == 'Windows'
      run: |
        C:/Miniforge3/Scripts/activate && mamba run -n build_env pip wheel . -w wheelhouse/scabbard



    # Commit and push the built wheels
    - name: Commit wheels to repository
      run: |
        mkdir -p wheels
        mkdir -p wheels/pytopotoolbox wheels/dagger wheels/scabbard
        mv wheelhouse/pytopotoolbox/*.whl wheels/pytopotoolbox/
        mv wheelhouse/dagger/*.whl wheels/dagger/
        mv wheelhouse/scabbard/*.whl wheels/scabbard/

        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        git pull --rebase origin ${{ github.ref }}
        git add wheels/**/*.whl
        git commit -m "Add built wheels to repository [skip ci]"
        git push origin ${{ github.ref }}
